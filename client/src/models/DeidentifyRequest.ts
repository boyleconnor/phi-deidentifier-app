/* tslint:disable */
/* eslint-disable */
/**
 * NLP Sandbox PHI Deidentifier API
 * # Overview This NLP tool relies on the following NLP tools to deidentify a clinical note given as input. - Data Annotator - Person Name Annotator - Physical Address Annotator - TBA 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: thomas.schaffter@sagebionetworks.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DeidentificationStep,
    DeidentificationStepFromJSON,
    DeidentificationStepFromJSONTyped,
    DeidentificationStepToJSON,
    Note,
    NoteFromJSON,
    NoteFromJSONTyped,
    NoteToJSON,
} from './';

/**
 * A request to de-identify a clinical note
 * @export
 * @interface DeidentifyRequest
 */
export interface DeidentifyRequest {
    /**
     * 
     * @type {Note}
     * @memberof DeidentifyRequest
     */
    note: Note;
    /**
     * A list of deidentification steps
     * @type {Array<DeidentificationStep>}
     * @memberof DeidentifyRequest
     */
    deidentificationSteps: Array<DeidentificationStep>;
}

export function DeidentifyRequestFromJSON(json: any): DeidentifyRequest {
    return DeidentifyRequestFromJSONTyped(json, false);
}

export function DeidentifyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeidentifyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'note': NoteFromJSON(json['note']),
        'deidentificationSteps': ((json['deidentificationSteps'] as Array<any>).map(DeidentificationStepFromJSON)),
    };
}

export function DeidentifyRequestToJSON(value?: DeidentifyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'note': NoteToJSON(value.note),
        'deidentificationSteps': ((value.deidentificationSteps as Array<any>).map(DeidentificationStepToJSON)),
    };
}


